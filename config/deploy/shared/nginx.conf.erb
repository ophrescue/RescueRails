upstream unicorn {
  server unix:/tmp/unicorn.<%= fetch(:full_app_name) %>.sock fail_timeout=0;
}

server {
  # These are calls from port 80 on the load balancer that should be redirected to https
  server_name <%= fetch(:server_name) %> www.<%= fetch(:server_name) %>;
  listen 8080;
  return 301 https://<%= fetch(:server_name) %>$request_uri;
}

server {
  server_name <%= fetch(:server_name) %> _;
  listen 9090;
  root <%= fetch(:deploy_to) %>/current/public;
  try_files             $uri /system/maintenance.html @unicorn;

  real_ip_header X-Forwarded-For;
  set_real_ip_from 192.168.255.0/24;

  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto http;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn;
  }

  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
    gzip_static       on;
    expires           max;
    add_header        Cache-Control public;
    add_header        Last-Modified "";
    add_header        ETag "";

    open_file_cache          max=1000 inactive=500s;
    open_file_cache_valid    600s;
    open_file_cache_errors   on;
    break;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 50M;
  keepalive_timeout 10;
}
